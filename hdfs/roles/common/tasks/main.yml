- name: check if file exists
  stat:
    path: '{{hdfs_download_destination}}'
  register: stat_result

- name: download apache hadoop
  command:
    cmd: 'wget {{hdfs_download_link}} -O {{hdfs_download_destination}}'
  when: not stat_result.stat.exists


- name: unarchive downloaded file
  command:
    cmd: 'tar xzvf {{hdfs_download_destination}} -C {{hdfs_unarchive_destination}}'


- name: remove similar directory
  command:
    cmd: "rm -rf {{hdfs_unarchive_destination}}hadoop"


- name: change directory name
  command:
    cmd: "mv -f {{hdfs_unarchive_destination}}{{hdfs_unarchived_filename}} {{hdfs_unarchive_destination}}hadoop"


#- name: create config files
#  template:
#    src: '{{ item }}'
#    dest: "{{hdfs_hadoop_home}}/etc/hadoop/{{item|replace('.jinja2','')}}"
#  with_fileglob:
#    - "../templates/*"


- name: create core-site.xml
  template:
    src: core-site.xml.jinja2
    dest: "{{hdfs_hadoop_home}}/etc/hadoop/core-site.xml"
    mode: 0640


- name: create hadoop-env.sh
  template:
    src: hadoop-env.sh.jinja2
    dest: "{{hdfs_hadoop_home}}/etc/hadoop/hadoop-env.sh"
    mode: 0640


- name: create hdfs-site.xml
  template:
    src: hdfs-site.xml.jinja2
    dest: "{{hdfs_hadoop_home}}/etc/hadoop/hdfs-site.xml"
    mode: 0640


- name: create workers
  template:
    src: workers.jinja2
    dest: "{{hdfs_hadoop_home}}/etc/hadoop/workers"
    mode: 0640


- name: add hadoop to path
  command:
    cmd: 'echo PATH={{hdfs_hadoop_home}}/bin:{{hdfs_hadoop_home}}/sbin:$PATH >> ~/.profile'


- name: create hosts file
  template:
    src: hosts.jinja2
    dest: /etc/hosts
    mode: 0640


#- name: create ssh keys
#  command:
#    cmd: "ssh-keygen -t rsa -C \$HOSTNAME -f \$HOME/.ssh/id_rsa -P ''"


- name: check fuser installation on rhel
  yum:
    name: psmisc
    state: present
  when: ansible_facts['os_family']|lower == 'redhat'


- name: check fuser installation on debian
  apt:
    name: psmisc
    state: present
  when: ansible_facts['os_family']|lower == 'debian'

